
package CoffeeShop.Views;

import CoffeeShop.Model.Customer;
import CoffeeShop.Model.Menu;
import CoffeeShop.Model.MenuItem;
import CoffeeShop.Model.Name;
import java.awt.Color;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;


public class CustomerUI extends javax.swing.JFrame {

    private DefaultTableModel model;
    private javax.swing.JLabel categoriesLabel;
    private javax.swing.JRadioButton categoryDessert;
    private javax.swing.JRadioButton categoryDrinks;
    private javax.swing.JRadioButton categoryMainCourse;
    private javax.swing.JRadioButton categoryStarters;
    private javax.swing.JTextField customerIDField;
    private javax.swing.JLabel customerLabel;
    private javax.swing.JTextField customerMenuSearch;
    private javax.swing.JLabel customerMenuSearchLabel;
    private javax.swing.JScrollPane customerUIScrollPane;
    private javax.swing.JTextField discount;
    private javax.swing.JLabel discountLabel;
    private javax.swing.JTextArea displayOrder;
    private javax.swing.JLabel info;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton makeOrder;
    private javax.swing.JTable menuItems;
    private javax.swing.JButton search;
    private javax.swing.JButton searchCustomerID;
    private javax.swing.JTextField totalCost;
    private javax.swing.JLabel totalCostLabel;
    /**
     * Creates new form Customer
     */
    public CustomerUI() {
        initComponents();
        model = (DefaultTableModel) menuItems.getModel();
        ButtonGroup group = new ButtonGroup();
        group.add(categoryDessert);
        group.add(categoryDrinks);
        group.add(categoryMainCourse);
        group.add(categoryStarters);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        makeOrder = new javax.swing.JButton();
        customerUIScrollPane = new javax.swing.JScrollPane();
        menuItems = new javax.swing.JTable();
        discountLabel = new javax.swing.JLabel();
        customerMenuSearchLabel = new javax.swing.JLabel();
        customerMenuSearch = new javax.swing.JTextField();
        categoriesLabel = new javax.swing.JLabel();
        categoryStarters = new javax.swing.JRadioButton();
        categoryMainCourse = new javax.swing.JRadioButton();
        categoryDessert = new javax.swing.JRadioButton();
        categoryDrinks = new javax.swing.JRadioButton();
        totalCostLabel = new javax.swing.JLabel();
        discount = new javax.swing.JTextField();
        totalCost = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayOrder = new javax.swing.JTextArea();
        search = new javax.swing.JButton();
        info = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        customerIDField = new javax.swing.JTextField();
        searchCustomerID = new javax.swing.JButton();
        customerLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Menu");
        setName("CustomerUI"); // NOI18N
        setResizable(false);

        makeOrder.setText("Order");

        menuItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Category", "Description", "Price Per Item", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        menuItems.setColumnSelectionAllowed(true);
        menuItems.getTableHeader().setReorderingAllowed(false);
        customerUIScrollPane.setViewportView(menuItems);
        menuItems.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (menuItems.getColumnModel().getColumnCount() > 0) {
            menuItems.getColumnModel().getColumn(0).setResizable(false);
            menuItems.getColumnModel().getColumn(1).setResizable(false);
            menuItems.getColumnModel().getColumn(2).setResizable(false);
            menuItems.getColumnModel().getColumn(3).setResizable(false);
        }

        discountLabel.setText("Discount");

        customerMenuSearchLabel.setText("Search item");

        categoriesLabel.setText("Categories");

        categoryStarters.setText("Starters");

        categoryMainCourse.setText("Main Course");

        categoryDessert.setText("Dessert");

        categoryDrinks.setText("Drinks");

        totalCostLabel.setText("Total");

        discount.setEditable(false);
        discount.setText("0");

        totalCost.setEditable(false);
        totalCost.setText("0");

        displayOrder.setEditable(false);
        displayOrder.setColumns(20);
        displayOrder.setRows(5);
        jScrollPane1.setViewportView(displayOrder);

        search.setText("Search");
        info.setText("Select category and select order ID");
        jLabel1.setText("Customer ID");
        searchCustomerID.setText("Search");
        customerLabel.setText("Welcome");
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(makeOrder, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(discountLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalCost)
                            .addComponent(discount)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(customerUIScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(totalCostLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(categoriesLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(categoryStarters)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(categoryMainCourse)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(categoryDessert)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(categoryDrinks))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(customerMenuSearchLabel)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(customerMenuSearch)
                                    .addComponent(customerIDField, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(searchCustomerID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                            .addComponent(customerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(customerMenuSearch)
                                .addComponent(search)
                                .addComponent(customerLabel))
                            .addComponent(customerMenuSearchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(customerIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(searchCustomerID))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(categoryStarters)
                                    .addComponent(categoryMainCourse)
                                    .addComponent(categoryDessert)
                                    .addComponent(categoryDrinks)
                                    .addComponent(categoriesLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(customerUIScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(discountLabel)
                            .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(totalCostLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(totalCost, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(makeOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(info)
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public DefaultTableModel getModel() {
        return model;
    }

    public JTextField getCustomerIDField() {
        return customerIDField;
    }

    public JLabel getCustomerLabel() {
        return customerLabel;
    }

    public JTextField getCustomerMenuSearch() {
        return customerMenuSearch;
    }

    public JTextField getDiscount() {
        return discount;
    }

    public JTextArea getDisplayOrder() {
        return displayOrder;
    }

    public JLabel getInfo() {
        return info;
    }

    public JTable getMenuItems() {
        return menuItems;
    }

    public JTextField getTotalCost() {
        return totalCost;
    }

    public void setMakeOrderActionListener(ActionListener al){
        makeOrder.addActionListener(al);
    }

    public void setCategoryDessertActionListener(ActionListener al ) {
        this.categoryDessert.addActionListener(al);
    }

    public void setCategoryDrinksActionListener(ActionListener al) {
        this.categoryDrinks.addActionListener(al);
    }

    public void setCategoryStartersActionListener(ActionListener al) {
        this.categoryStarters.addActionListener(al);
    }

    public void setCategoryMainCourseActionListener(ActionListener al) {
        this.categoryMainCourse.addActionListener(al);
    }

    public void setSearchActionListener(ActionListener al){
        search.addActionListener(al);
    }

    public void setSearchCustomerIDActionListener(ActionListener al){
        searchCustomerID.addActionListener(al);
    }

    public void setMenuItemsMouseListener(MouseAdapter ma){
        menuItems.addMouseListener(ma);
    }

}
